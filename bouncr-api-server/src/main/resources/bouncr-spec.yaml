openapi: 3.0.0
info:
  version: 0.2.0
  title: Bouncr API Specification
  description: |
    Bouncr is a reverse proxy with authenticate and authorization.
  license:
    name: EPL 2.0
servers:
- url: http://localhost:3000/bouncr/api
paths:
  /sign_in:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordSignInRequest'
      responses:
        201:
          description: Sign in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'

  /users:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    get:
      summary: Fetch users
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      responses:
        200:
          description: Fetch successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    post:
      summary: Create a user
      operationId: craeteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        201:
          description: Create successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/{account}:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: account
      in: path
      required: true
      schema:
        type: string
      example: user1
    get:
      summary: Fetch a user by a given account
      responses:
        200:
          description: ???
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      responses:
        204:
          description: Updated a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateRequest'
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintsProblem'
    delete:
      responses:
        204:
          description: Delete a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /groups:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    get:
      summary: Find groups
      responses:
        200:
          description: ???
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
    post:
      summary: Create a group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateRequest'
      responses:
        201:
          description: Created successful.
  /group/{name}:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: name
      in: path
      description: The name of the group
      required: true
      schema:
        type: string
      example: group1
    get:
      summary: Find a group
      operationId: findGroup
      responses:
        200:
          description: Find a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        404:
          description: The name of the group is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      summary: Update a group
      operationId: updateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateRequest'
      responses:
        204:
          description: Updating a group is successful
    delete:
      summary: Delete a group
      operationId: deleteGroup
      responses:
        204:
          description: Deleting a group is successful
  /applications:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    get:
      operationId: findApplications
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
    post:
      operationId: createApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateRequest'
      responses:
        201:
          description: Creating an application is successful
        400:
          description: The request for creating an application is malformed
          content:
            application/json:
              schema:
                $ref:
                  '#/components/schemas/ConstraintsProblem'
  /application/{name}:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: name
      required: true
      in: path
      schema:
        type: string
    get:
      operationId: findApplication
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        404:
          description: Application is not found by the given name
    put:
      operationId: updateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateRequest'
      responses:
        204:
          description: Updating the application is successful
    delete:
      operationId: deleteApplication
      responses:
        204:
          description: Deleting the application is successful
  /application/{name}/realms:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: name
      required: true
      in: path
      schema:
        type: string
    get:
      operationId: findRealms
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realms'
    post:
      operationId: createRealm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmCreateRequest'
      responses:
        201:
          description: Creating a realm is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
  /application/{name}/realm/{realm_name}:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: name
      required: true
      in: path
      schema:
        type: string
    - name: realm_name
      required: true
      in: path
      schema:
        type: string
    get:
      operationId: findRealm
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        404:
          description: The realm is not found by the given name
    put:
      operationId: updateRealm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmUpdateRequest'
      responses:
        204:
          description: Updating the realm is successful
    delete:
      operationId: deleteRealm
      responses:
        204:
          description: Deleting the realm is successful
  /roles:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    get:
      operationId: findRoles
    post:
      operationId: createRole
  /role/{name}:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: name
      required: true
      in: path
      schema:
        type: string
    get:
      operationId: findRole
    put:
      operationId: updateRole
    delete:
      operationId: deleteRole
  /permissions:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    get:
      operationId: findPermissions
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
    post:
      operationId: createPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCreateRequest'
      responses:
        201:
          description: Creating a permission is successful
  /permission/{name}:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    - name: name
      required: true
      in: path
      schema:
        type: string
    get:
      operationId: findPermission
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
    put:
      operationId: updatePermission
    delete:
      operationId: deletePermission
  /assignments:
    parameters:
    - $ref: '#/components/parameters/BouncrCredential'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentsRequest'
      responses:
        201:
          description: Creating assignments is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignments'
    delete:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentsRequest'
      responses:
        204:
          description: Deleting assignments is successful
components:
  schemas:
    PasswordSignInRequest:
      type: object
      x-json-spec: 'PasswordSignInRequest'
      properties:
        account:
          type: string
        password:
          type: string
      example:
        account: user1
        password: user1
    UserSession:
      type: object
      properties:
        id:
          type: number
          format: int64
        token:
          type: string
      example:
        id: 1
        token: 000000-0000-0000-000000
    Users:
      type: array
      x-json-spec: 'Users'
      items:
        $ref: '#/components/schemas/User'
    User:
      type: object
      x-json-spec: 'User'
      properties:
        id:
          type: number
          format: int64
        account:
          type: string
        name:
          type: string
        email:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
      example:
        id: 1
        account: user1
        name: Test User1
        email: user1@exapmle.com
        groups:
        - id: 1
          name: group1
          description: This is a group1
        - id: 2
          name: group2
          description: This is a group2
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    Roles:
      type: array
      items:
        $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        id:
          type: number
          format: int64
        name:
          type: string
        description:
          type: string
    Permissions:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    Permission:
      type: object
      properties:
        id:
          type: number
          format: int64
        name:
          type: string
        description:
          type: string
    Applications:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    Application:
      type: object
      properties:
        id:
          type: number
          format: int64
        name:
          type: string
        description:
          type: string
        pass_to:
          type: string
        virtual_path:
          type: string
    Realms:
      type: array
      items:
        $ref: '#/components/schemas/Realm'
    Realm:
      type: object
      properties:
        id:
          type: number
          format: int64
        name:
          type: string
        description:
          type: string
        url:
          type: string
    Assignments:
      type: array
      items:
        $ref: '#/components/schemas/Assignment'
    Assignment:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/Group'
        role:
          $ref: '#/components/schemas/Role'
        realm:
          $ref: '#/components/schemas/Realm'
    AssignmentsRequest:
      type: array
      items:
        type: object
        properties:
          group:
            type: object
            properties:
              id:
                type: integer
          role:
            type: object
            properties:
              id:
                type: integer
          realm:
            type: object
            properties:
              id:
                type: integer
    UserCreateRequest:
      type: object
      x-json-spec: UserCreateRequest
      properties:
        account:
          type: string
        name:
          type: string
        email:
          type: string
    UserUpdateRequest:
      type: object
      x-json-spec: UserUpdateRequest
      properties:
        id:
          type: integer
        account:
          type: string
        name:
          type: string
        email:
          type: string
    GroupCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    GroupUpdateRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    RoleCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    RoleUpdateRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    PermissionCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    PermissionUpdateRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    ApplicationCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pass_to:
          type: string
    ApplicationUpdateRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        pass_to:
          type: string
    RealmCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    RealmUpdateRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    ConstraintsProblem:
      type: object
      properties:
        violations:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintsViolation'
    ConstraintsViolation:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    Problem:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
  parameters:
    BouncrCredential:
      name: X-Bouncr-Credential
      in: header
      schema:
        type: string
        x-json-spec: BouncrCredential


